{"schemaVersion":{"minor":3,"major":0,"patch":0},"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/MapsNativeSDK\/objc(cs)NSView"]},{"identifiers":["doc:\/\/MapsNativeSDK\/objc(pl)NSAccessibilityElement","doc:\/\/MapsNativeSDK\/objc(pl)NSAccessibility","doc:\/\/MapsNativeSDK\/objc(pl)NSAnimatablePropertyContainer","doc:\/\/MapsNativeSDK\/objc(pl)NSAppearanceCustomization","doc:\/\/MapsNativeSDK\/objc(pl)NSDraggingDestination","doc:\/\/MapsNativeSDK\/objc(pl)NSStandardKeyBindingResponding","doc:\/\/MapsNativeSDK\/objc(pl)NSTouchBarProvider","doc:\/\/MapsNativeSDK\/objc(pl)NSUserActivityRestoring","doc:\/\/MapsNativeSDK\/objc(pl)NSUserInterfaceItemIdentification","doc:\/\/MapsNativeSDK\/15CoreSwiftBridge24OpaquePointerConvertableP","doc:\/\/MapsNativeSDK\/objc(pl)NSCoding","doc:\/\/MapsNativeSDK\/objc(pl)NSObject","doc:\/\/MapsNativeSDK\/s7CVarArgP","doc:\/\/MapsNativeSDK\/s28CustomDebugStringConvertibleP","doc:\/\/MapsNativeSDK\/s23CustomStringConvertibleP","doc:\/\/MapsNativeSDK\/SQ","doc:\/\/MapsNativeSDK\/SH","doc:\/\/MapsNativeSDK\/s8SendableP"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/init(frame:)","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/init(frame:configuration:delegate:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/camera","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/delegate","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/isCurrentLocationButtonVisible","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/isRotateGesturesEnabled","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/isScrollGesturesEnabled","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/isZoomGesturesEnabled","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/logoAlignment","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/logoIgnoresSafeArea","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/logoInsets","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/mode","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/overlay","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/showsCompass","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/showsZoomButtons","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/style","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/userPointer"]},{"identifiers":["doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/cleanUp()","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/deselectMapFeature()","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/onTapCurrentLocationButton()","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/selectMapFeature(refId:)","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/setMode(_:)","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/setPresentWithTransactionIfNotSupports(gpuFamily:)","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/setStyle(_:force:)","doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/viewDidMoveToSuperview()"],"title":"Instance Methods"},{"title":"Default Implementations","identifiers":["doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/OpaquePointerConvertable-Implementations"],"generated":true}],"abstract":[{"type":"text","text":"Main object of the Map"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MapView"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Add MapView to your hierarchy of views to display map on the screen.","type":"text"}]}]}],"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"MapView"}],"modules":[{"name":"MapsNativeSDK"}],"roleHeading":"Class","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MapView","kind":"identifier"}],"externalID":"c:@M@MapsNativeSDK@objc(cs)MapView","symbolKind":"class","title":"MapView"},"variants":[{"paths":["\/documentation\/mapsnativesdk\/mapview"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK"]]},"identifier":{"url":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView","interfaceLanguage":"swift"},"references":{"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/showsZoomButtons":{"kind":"symbol","title":"showsZoomButtons","abstract":[{"type":"text","text":"A Boolean value that determines visibility of zoom buttons"}],"url":"\/documentation\/mapsnativesdk\/mapview\/showszoombuttons","identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/showsZoomButtons","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"showsZoomButtons"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol","type":"topic"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView":{"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView","title":"MapView","abstract":[{"text":"Main object of the Map","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/mapsnativesdk\/mapview","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MapView","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MapView"}],"role":"symbol"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/isCurrentLocationButtonVisible":{"kind":"symbol","title":"isCurrentLocationButtonVisible","abstract":[{"type":"text","text":"A Boolean value that determines visibility of the Current Location button"}],"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/isCurrentLocationButtonVisible","url":"\/documentation\/mapsnativesdk\/mapview\/iscurrentlocationbuttonvisible","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isCurrentLocationButtonVisible","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"role":"symbol","type":"topic"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/isRotateGesturesEnabled":{"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/isRotateGesturesEnabled","url":"\/documentation\/mapsnativesdk\/mapview\/isrotategesturesenabled","title":"isRotateGesturesEnabled","abstract":[{"type":"text","text":"A Boolean value that indicates whether the user may use gestures to rotate the map"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isRotateGesturesEnabled"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/mode":{"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/mode","title":"mode","abstract":[{"text":"Current mode of the Map","type":"text"}],"type":"topic","url":"\/documentation\/mapsnativesdk\/mapview\/mode","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"mode","kind":"identifier"},{"kind":"text","text":": "},{"text":"MapMode","preciseIdentifier":"s:13MapsNativeSDK7MapModeO","kind":"typeIdentifier"}],"role":"symbol"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/style":{"title":"style","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Current style of the Map"}],"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/style","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"style"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13MapsNativeSDK8MapStyleV","text":"MapStyle"},{"text":"?","kind":"text"}],"url":"\/documentation\/mapsnativesdk\/mapview\/style"},"doc://MapsNativeSDK/objc(pl)NSCoding":{"type":"unresolvable","title":"Foundation.NSCoding","identifier":"doc:\/\/MapsNativeSDK\/objc(pl)NSCoding"},"doc://MapsNativeSDK/objc(pl)NSAnimatablePropertyContainer":{"type":"unresolvable","title":"AppKit.NSAnimatablePropertyContainer","identifier":"doc:\/\/MapsNativeSDK\/objc(pl)NSAnimatablePropertyContainer"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/logoAlignment":{"title":"logoAlignment","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Alignment of the logo"}],"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/logoAlignment","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logoAlignment"},{"text":": ","kind":"text"},{"text":"MapLogoAlignment","kind":"typeIdentifier","preciseIdentifier":"s:13MapsNativeSDK16MapLogoAlignmentO"}],"url":"\/documentation\/mapsnativesdk\/mapview\/logoalignment"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/cleanUp()":{"title":"cleanUp()","type":"topic","kind":"symbol","abstract":[{"text":"Cleans up and destroys all resources of MapView instance. This method should be called before MapVies has destroyed","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to guarantee the destructor of C++ class is called."}],"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/cleanUp()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cleanUp","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/mapsnativesdk\/mapview\/cleanup()"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/isZoomGesturesEnabled":{"type":"topic","abstract":[{"text":"A Boolean value that determines whether the user may use gestures to zoom in and out of the map","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isZoomGesturesEnabled","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"isZoomGesturesEnabled","kind":"symbol","url":"\/documentation\/mapsnativesdk\/mapview\/iszoomgesturesenabled","role":"symbol","identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/isZoomGesturesEnabled"},"doc://MapsNativeSDK/s7CVarArgP":{"identifier":"doc:\/\/MapsNativeSDK\/s7CVarArgP","type":"unresolvable","title":"Swift.CVarArg"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/isScrollGesturesEnabled":{"title":"isScrollGesturesEnabled","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A Boolean value that determines whether the user may use gestures to move map"}],"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/isScrollGesturesEnabled","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isScrollGesturesEnabled"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/mapsnativesdk\/mapview\/isscrollgesturesenabled"},"doc://MapsNativeSDK/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/MapsNativeSDK\/s23CustomStringConvertibleP"},"doc://MapsNativeSDK/objc(pl)NSAccessibility":{"title":"AppKit.NSAccessibilityProtocol","type":"unresolvable","identifier":"doc:\/\/MapsNativeSDK\/objc(pl)NSAccessibility"},"doc://MapsNativeSDK/objc(cs)NSView":{"title":"AppKit.NSView","type":"unresolvable","identifier":"doc:\/\/MapsNativeSDK\/objc(cs)NSView"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/showsCompass":{"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/showsCompass","kind":"symbol","url":"\/documentation\/mapsnativesdk\/mapview\/showscompass","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"showsCompass","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"type":"text","text":"A Boolean value that determines visibility of the compass"}],"title":"showsCompass"},"doc://MapsNativeSDK/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/MapsNativeSDK\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"},"doc://MapsNativeSDK/15CoreSwiftBridge24OpaquePointerConvertableP":{"type":"unresolvable","identifier":"doc:\/\/MapsNativeSDK\/15CoreSwiftBridge24OpaquePointerConvertableP","title":"CoreSwiftBridge.OpaquePointerConvertable"},"doc://MapsNativeSDK/objc(pl)NSUserActivityRestoring":{"type":"unresolvable","identifier":"doc:\/\/MapsNativeSDK\/objc(pl)NSUserActivityRestoring","title":"AppKit.NSUserActivityRestoring"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/OpaquePointerConvertable-Implementations":{"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/OpaquePointerConvertable-Implementations","kind":"article","url":"\/documentation\/mapsnativesdk\/mapview\/opaquepointerconvertable-implementations","role":"collectionGroup","type":"topic","abstract":[],"title":"OpaquePointerConvertable Implementations"},"doc://MapsNativeSDK/documentation/MapsNativeSDK":{"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK","abstract":[{"type":"strong","inlineContent":[{"text":"MapsNativeSDK","type":"text"}]},{"text":" - библиотека, позволяющая использовать картографические данные и геосервисы VK в ваших iOS-приложениях.","type":"text"}],"role":"collection","type":"topic","kind":"symbol","title":"MapsNativeSDK","url":"\/documentation\/mapsnativesdk"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/logoInsets":{"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/logoInsets","kind":"symbol","url":"\/documentation\/mapsnativesdk\/mapview\/logoinsets","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"logoInsets","kind":"identifier"},{"kind":"text","text":": "},{"text":"MapEdgeInsets","kind":"typeIdentifier","preciseIdentifier":"s:13MapsNativeSDK13MapEdgeInsetsa"}],"abstract":[{"type":"text","text":"Insets of the logo"}],"title":"logoInsets"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/delegate":{"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/delegate","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"delegate","kind":"identifier"},{"kind":"text","text":": (any "},{"text":"MapViewDelegate","preciseIdentifier":"s:13MapsNativeSDK15MapViewDelegateP","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"url":"\/documentation\/mapsnativesdk\/mapview\/delegate","abstract":[],"type":"topic","title":"delegate","kind":"symbol"},"doc://MapsNativeSDK/objc(pl)NSUserInterfaceItemIdentification":{"type":"unresolvable","identifier":"doc:\/\/MapsNativeSDK\/objc(pl)NSUserInterfaceItemIdentification","title":"AppKit.NSUserInterfaceItemIdentification"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/setPresentWithTransactionIfNotSupports(gpuFamily:)":{"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/setPresentWithTransactionIfNotSupports(gpuFamily:)","kind":"symbol","url":"\/documentation\/mapsnativesdk\/mapview\/setpresentwithtransactionifnotsupports(gpufamily:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setPresentWithTransactionIfNotSupports"},{"kind":"text","text":"("},{"text":"gpuFamily","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MTLGPUFamily","preciseIdentifier":"c:@E@MTLGPUFamily"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"If MTLDevice supports features of a specific family, the"},{"text":" ","type":"text"},{"text":"presentWithTransactions feature will not be enabled for PlatformMarker.","type":"text"}],"title":"setPresentWithTransactionIfNotSupports(gpuFamily:)"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/setStyle(_:force:)":{"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/setStyle(_:force:)","kind":"symbol","url":"\/documentation\/mapsnativesdk\/mapview\/setstyle(_:force:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setStyle","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:13MapsNativeSDK8MapStyleV","text":"MapStyle"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"force"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Set style of the Map","type":"text"}],"title":"setStyle(_:force:)"},"doc://MapsNativeSDK/objc(pl)NSTouchBarProvider":{"identifier":"doc:\/\/MapsNativeSDK\/objc(pl)NSTouchBarProvider","title":"AppKit.NSTouchBarProvider","type":"unresolvable"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/viewDidMoveToSuperview()":{"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/viewDidMoveToSuperview()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"viewDidMoveToSuperview","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","abstract":[],"title":"viewDidMoveToSuperview()","type":"topic","kind":"symbol","url":"\/documentation\/mapsnativesdk\/mapview\/viewdidmovetosuperview()"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/deselectMapFeature()":{"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/deselectMapFeature()","kind":"symbol","url":"\/documentation\/mapsnativesdk\/mapview\/deselectmapfeature()","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"deselectMapFeature"},{"text":"()","kind":"text"}],"abstract":[{"text":"Remove selection from map feature, selected by touch ","type":"text"},{"type":"text","text":"\n"},{"text":"if ","type":"text"},{"type":"codeVoice","code":"MapConfiguration.selectFeatures"},{"type":"text","text":" equals  "},{"text":"\n","type":"text"},{"type":"text","text":"to "},{"code":".all","type":"codeVoice"},{"type":"text","text":" or "},{"code":".drawSelection","type":"codeVoice"},{"text":",","type":"text"},{"text":"\n","type":"text"},{"type":"text","text":"or by call "},{"type":"codeVoice","code":"func selectMapFeature(refId: String)"}],"title":"deselectMapFeature()"},"doc://MapsNativeSDK/objc(pl)NSAccessibilityElement":{"type":"unresolvable","identifier":"doc:\/\/MapsNativeSDK\/objc(pl)NSAccessibilityElement","title":"AppKit.NSAccessibilityElementProtocol"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/init(frame:configuration:delegate:)":{"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/init(frame:configuration:delegate:)","kind":"symbol","title":"init(frame:configuration:delegate:)","abstract":[{"type":"text","text":"Create new MapView instance"}],"type":"topic","role":"symbol","url":"\/documentation\/mapsnativesdk\/mapview\/init(frame:configuration:delegate:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"frame","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CGRect","preciseIdentifier":"c:@S@CGRect"},{"text":", ","kind":"text"},{"text":"configuration","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"MapConfiguration","preciseIdentifier":"s:13MapsNativeSDK16MapConfigurationV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"delegate"},{"kind":"text","text":": (any "},{"kind":"typeIdentifier","text":"MapViewDelegate","preciseIdentifier":"s:13MapsNativeSDK15MapViewDelegateP"},{"text":")?)","kind":"text"}]},"doc://MapsNativeSDK/objc(pl)NSDraggingDestination":{"type":"unresolvable","identifier":"doc:\/\/MapsNativeSDK\/objc(pl)NSDraggingDestination","title":"AppKit.NSDraggingDestination"},"doc://MapsNativeSDK/SQ":{"type":"unresolvable","identifier":"doc:\/\/MapsNativeSDK\/SQ","title":"Swift.Equatable"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/userPointer":{"kind":"symbol","identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/userPointer","title":"userPointer","abstract":[{"type":"text","text":"Controller to management user pointer on map"}],"type":"topic","role":"symbol","url":"\/documentation\/mapsnativesdk\/mapview\/userpointer","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"userPointer"},{"text":": ","kind":"text"},{"text":"UserPointerController","preciseIdentifier":"s:13MapsNativeSDK21UserPointerControllerC","kind":"typeIdentifier"}]},"doc://MapsNativeSDK/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/MapsNativeSDK\/s8SendableP","title":"Swift.Sendable"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/selectMapFeature(refId:)":{"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/selectMapFeature(refId:)","kind":"symbol","url":"\/documentation\/mapsnativesdk\/mapview\/selectmapfeature(refid:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"selectMapFeature","kind":"identifier"},{"kind":"text","text":"("},{"text":"refId","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"abstract":[{"text":"Selecting a feature, the same as if it were selected by touching it ","type":"text"},{"type":"text","text":"\n"},{"text":"when the setting ","type":"text"},{"code":"MapConfiguration.selectFeatures","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"\n"},{"type":"text","text":"equals  to "},{"type":"codeVoice","code":".all"},{"text":" or ","type":"text"},{"type":"codeVoice","code":".drawSelection"}],"title":"selectMapFeature(refId:)"},"doc://MapsNativeSDK/objc(pl)NSObject":{"type":"unresolvable","identifier":"doc:\/\/MapsNativeSDK\/objc(pl)NSObject","title":"ObjectiveC.NSObjectProtocol"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/logoIgnoresSafeArea":{"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/logoIgnoresSafeArea","kind":"symbol","url":"\/documentation\/mapsnativesdk\/mapview\/logoignoressafearea","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"logoIgnoresSafeArea"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"The Boolean value that determines ignoring logo of the safe area"}],"title":"logoIgnoresSafeArea"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/setMode(_:)":{"url":"\/documentation\/mapsnativesdk\/mapview\/setmode(_:)","identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/setMode(_:)","kind":"symbol","abstract":[{"type":"text","text":"Sets the mode of the Map"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setMode","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13MapsNativeSDK7MapModeO","text":"MapMode"},{"text":")","kind":"text"}],"type":"topic","title":"setMode(_:)"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/init(frame:)":{"title":"init(frame:)","url":"\/documentation\/mapsnativesdk\/mapview\/init(frame:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"frame"},{"kind":"text","text":": "},{"text":"CGRect","preciseIdentifier":"c:@S@CGRect","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/init(frame:)","abstract":[]},"doc://MapsNativeSDK/SH":{"type":"unresolvable","identifier":"doc:\/\/MapsNativeSDK\/SH","title":"Swift.Hashable"},"doc://MapsNativeSDK/objc(pl)NSAppearanceCustomization":{"type":"unresolvable","identifier":"doc:\/\/MapsNativeSDK\/objc(pl)NSAppearanceCustomization","title":"AppKit.NSAppearanceCustomization"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/onTapCurrentLocationButton()":{"kind":"symbol","title":"onTapCurrentLocationButton()","abstract":[{"text":"Call this method to simulate tap on Current Location button","type":"text"}],"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/onTapCurrentLocationButton()","url":"\/documentation\/mapsnativesdk\/mapview\/ontapcurrentlocationbutton()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onTapCurrentLocationButton","kind":"identifier"},{"kind":"text","text":"()"}],"role":"symbol","type":"topic"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/camera":{"kind":"symbol","identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/camera","title":"camera","abstract":[{"text":"Controller to management camera on map","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/mapsnativesdk\/mapview\/camera","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"camera"},{"kind":"text","text":": "},{"text":"CameraController","preciseIdentifier":"s:13MapsNativeSDK16CameraControllerC","kind":"typeIdentifier"}]},"doc://MapsNativeSDK/objc(pl)NSStandardKeyBindingResponding":{"type":"unresolvable","identifier":"doc:\/\/MapsNativeSDK\/objc(pl)NSStandardKeyBindingResponding","title":"AppKit.NSStandardKeyBindingResponding"},"doc://MapsNativeSDK/documentation/MapsNativeSDK/MapView/overlay":{"identifier":"doc:\/\/MapsNativeSDK\/documentation\/MapsNativeSDK\/MapView\/overlay","kind":"symbol","url":"\/documentation\/mapsnativesdk\/mapview\/overlay","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"overlay"},{"kind":"text","text":": "},{"text":"OverlayController","preciseIdentifier":"s:13MapsNativeSDK17OverlayControllerC","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Controller to management overlay on map, such as markers and shapes"}],"title":"overlay"}}}