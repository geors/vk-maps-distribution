{"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/baseconcepts","title":"Базовые возможности MapsNativeSDK","type":"article"},{"path":"\/documentation\/mapsnativesdk\/cameramoving","title":"Управление камерой","type":"article"},{"path":"\/documentation\/mapsnativesdk\/controls","title":"Элементы управления картой","type":"article"},{"path":"\/documentation\/mapsnativesdk\/followingmode","title":"Режимы следования","type":"article"},{"path":"\/documentation\/mapsnativesdk\/gestures","title":"Жесты","type":"article"},{"path":"\/documentation\/mapsnativesdk\/lifecycle","title":"Отслеживание событий карты","type":"article"},{"path":"\/documentation\/mapsnativesdk\/markers","title":"Маркеры","type":"article"},{"path":"\/documentation\/mapsnativesdk\/startusing","title":"Начало работы с MapsNativeSDK","type":"article"},{"path":"\/documentation\/mapsnativesdk\/styles","title":"Оформление карты","type":"article"},{"path":"\/documentation\/mapsnativesdk\/updatesdk","title":"Переход с JS MapsSDK","type":"article"},{"path":"\/documentation\/mapsnativesdk\/userpointer","title":"Индикатор пользователя","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/init(rawvalue:)","title":"init(rawValue: CGFloat)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/rawvalue","title":"var rawValue: CGFloat","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/disabled","title":"static let disabled: CameraController.DecelerationRate","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/fast","title":"static let fast: CameraController.DecelerationRate","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/normal","title":"static let normal: CameraController.DecelerationRate","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/cameracontroller\/decelerationrate","title":"CameraController.DecelerationRate","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/bearing","title":"var bearing: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/bearinginertiarate","title":"var bearingInertiaRate: Angle","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/centercoordinates","title":"var centerCoordinates: Coordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/mapbounds","title":"var mapBounds: MapBounds","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/maxzoom","title":"var maxZoom: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/minzoom","title":"var minZoom: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/pitch","title":"var pitch: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/scrollinertiarate","title":"var scrollInertiaRate: CameraController.DecelerationRate","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/zoom","title":"var zoom: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/zoominertiarate","title":"var zoomInertiaRate: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/calculateboundingbox(coordinates:cameraoptions:)","title":"func calculateBoundingBox(coordinates: MapCameraCoordinates, cameraOptions: MapCameraOptions) -> MapBounds","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/coordinatesbyviewpoint(_:)","title":"func coordinatesByViewPoint(CGPoint) -> Coordinates?","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/coordinatesbyviewpoints(_:)","title":"func coordinatesByViewPoints([CGPoint]) -> [Coordinates?]","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/featuresinrect(rect:layer:)","title":"func featuresInRect(rect: CameraController.RectangleDimensions, layer: String) -> [MapFeatureId]","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/fitbounds(_:padding:animationduration:reason:)","title":"func fitBounds(MapBounds, padding: MapEdgeInsets, animationDuration: TimeInterval, reason: Any?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/flyto(coordinates:cameraoptions:animationoptions:reason:resetfollowingmode:)","title":"func flyTo(coordinates: MapCameraCoordinates?, cameraOptions: MapCameraOptions?, animationOptions: MapAnimationOptions, reason: Any?, resetFollowingMode: Bool) async -> MapCameraAnimationResult","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/flyto(coordinates:cameraoptions:animationoptions:reason:resetfollowingmode:completion:)","title":"func flyTo(coordinates: MapCameraCoordinates?, cameraOptions: MapCameraOptions?, animationOptions: MapAnimationOptions?, reason: Any?, resetFollowingMode: Bool, completion: ((MapCameraAnimationResult) -> Void)?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/flytocurrentlocation(zoomlevel:animationoptions:reason:resetfollowingmode:)","title":"func flyToCurrentLocation(zoomLevel: Double?, animationOptions: MapAnimationOptions?, reason: Any?, resetFollowingMode: Bool) async -> MapCameraAnimationResult","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/flytocurrentlocation(zoomlevel:animationoptions:reason:resetfollowingmode:completion:)","title":"func flyToCurrentLocation(zoomLevel: Double?, animationOptions: MapAnimationOptions?, reason: Any?, resetFollowingMode: Bool, completion: ((MapCameraAnimationResult) -> Void)?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/metersperpoint(zoom:coordinates:)","title":"func metersPerPoint(zoom: Double, coordinates: Coordinates) -> Double","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/pointspermeter(zoom:coordinates:)","title":"func pointsPerMeter(zoom: Double, coordinates: Coordinates) -> Double","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/setbearing(degrees:animationduration:reason:)","title":"func setBearing(degrees: Double, animationDuration: TimeInterval, reason: Any?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/setpadding(_:animationduration:reason:)","title":"func setPadding(MapEdgeInsets, animationDuration: TimeInterval, reason: Any?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/setpitch(degrees:animationduration:reason:)","title":"func setPitch(degrees: Double, animationDuration: TimeInterval, reason: Any?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/setzoom(_:anchor:animationduration:reason:)","title":"func setZoom(Double, anchor: CGPoint?, animationDuration: TimeInterval, reason: Any?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/setzoomrange(minzoom:maxzoom:)","title":"func setZoomRange(minZoom: Double?, maxZoom: Double?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/stopanimation()","title":"func stopAnimation()","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/viewpointbycoordinates(_:)","title":"func viewPointByCoordinates(Coordinates) -> CGPoint?","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/viewpointsbycoordinates(_:)","title":"func viewPointsByCoordinates([Coordinates]) -> [(position: CGPoint, opacity: Double)]","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/zoomin(step:animationduration:reason:)","title":"func zoomIn(step: Double, animationDuration: TimeInterval, reason: Any?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/zoomout(step:animationduration:reason:)","title":"func zoomOut(step: Double, animationDuration: TimeInterval, reason: Any?)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/rectangledimensions\/pixels(_:)","title":"case pixels(CGRect)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/cameracontroller\/rectangledimensions\/points(_:)","title":"case points(CGRect)","type":"case"}],"path":"\/documentation\/mapsnativesdk\/cameracontroller\/rectangledimensions","title":"CameraController.RectangleDimensions","type":"enum"}],"path":"\/documentation\/mapsnativesdk\/cameracontroller","title":"CameraController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapasset\/name","title":"var name: String?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapasset","title":"MapAsset","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/init(id:encodedstring:receivetapevents:)","title":"init(id: String, encodedString: String, receiveTapEvents: Bool) throws","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/init(id:json:receivetapevents:)","title":"init(id: String, json: String, receiveTapEvents: Bool) throws","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/init(id:jsondata:receivetapevents:)","title":"init(id: String, jsonData: Data, receiveTapEvents: Bool) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/id","title":"var id: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/setencodedpolyline(_:)","title":"func setEncodedPolyline(String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/setgeojson(_:)","title":"func setGeoJSON(String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/setreceivetapevents(_:)","title":"func setReceiveTapEvents(Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/mapsnativesdk\/mapdatasource\/==(_:_:)","title":"static func == (MapDataSource, MapDataSource) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapdatasource\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapdatasource","title":"MapDataSource","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/init()","title":"convenience init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimagenode\/image","title":"var image: MapNodeImage?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapimagenode","title":"MapImageNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/init()","title":"convenience init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode\/imagesequence","title":"var imageSequence: MapNodeImageSequence?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapimagesequencenode","title":"MapImageSequenceNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maplayer\/init(id:sourceid:paint:layout:)","title":"init(id: String, sourceID: String, paint: any PaintProperties, layout: LayoutProperties) throws","type":"init"},{"path":"\/documentation\/mapsnativesdk\/maplayer\/init(json:)","title":"init(json: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maplayer\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maplayer\/isvisible","title":"var isVisible: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maplayer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/mapsnativesdk\/maplayer\/==(_:_:)","title":"static func == (MapLayer, MapLayer) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/maplayer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/maplayer","title":"MapLayer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/init()","title":"convenience init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/animation","title":"var animation: MapNodeAnimation?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/childnodes","title":"var childNodes: [MapNode]","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/position","title":"var position: CGPoint","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/rotation","title":"var rotation: Angle","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/scale","title":"var scale: CGPoint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnode\/addchild(_:)","title":"func addChild(MapNode)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapnode","title":"MapNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeanimation\/init(action:)","title":"convenience init(action: MapNodeAction)","type":"init"}],"path":"\/documentation\/mapsnativesdk\/mapnodeanimation","title":"MapNodeAnimation","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeimage\/init(imageid:)","title":"convenience init(imageID: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeimage\/imageid","title":"var imageID: String","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapnodeimage","title":"MapNodeImage","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeimagesequence\/init(imageid:framesperrow:framescount:duration:)","title":"convenience init(imageID: String, framesPerRow: UInt32, framesCount: UInt32, duration: TimeInterval)","type":"init"}],"path":"\/documentation\/mapsnativesdk\/mapnodeimagesequence","title":"MapNodeImageSequence","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mappin\/init(_:)","title":"convenience init(String)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mappin\/init(_:coordinates:)","title":"convenience init(String, coordinates: Coordinates)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mappin\/init(_:coordinates:node:)","title":"convenience init(String, coordinates: Coordinates, node: MapNode)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mappin\/coordinates","title":"var coordinates: Coordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mappin\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mappin\/node","title":"var node: MapNode?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mappin","title":"MapPin","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapscene\/addpins(_:)","title":"func addPins([MapPin])","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapscene\/apply(force:)","title":"func apply(force: Bool)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapscene\/findpin(id:)","title":"func findPin(id: String) -> MapPin?","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapscene\/removeallpins()","title":"func removeAllPins()","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapscene\/removepins(_:)","title":"func removePins([MapPin])","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapscene","title":"MapScene","type":"class"},{"path":"\/documentation\/mapsnativesdk\/mapsharedobject","title":"MapSharedObject","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/init()","title":"convenience init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/fontcolor","title":"var fontColor: CGColor","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/fontname","title":"var fontName: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/outlinecolor","title":"var outlineColor: CGColor","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/text","title":"var text: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maptextnode\/useoutline","title":"var useOutline: Bool","type":"property"}],"path":"\/documentation\/mapsnativesdk\/maptextnode","title":"MapTextNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapview\/init(frame:configuration:delegate:)","title":"init(frame: CGRect, configuration: MapConfiguration, delegate: (any MapViewDelegate)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapview\/camera","title":"let camera: CameraController","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/delegate","title":"var delegate: (any MapViewDelegate)?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/iscurrentlocationbuttonvisible","title":"var isCurrentLocationButtonVisible: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/isrotategesturesenabled","title":"var isRotateGesturesEnabled: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/isscrollgesturesenabled","title":"var isScrollGesturesEnabled: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/iszoomgesturesenabled","title":"var isZoomGesturesEnabled: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/logoalignment","title":"var logoAlignment: MapLogoAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/logoignoressafearea","title":"var logoIgnoresSafeArea: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/logoinsets","title":"var logoInsets: MapEdgeInsets","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/mode","title":"var mode: MapMode","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/overlay","title":"let overlay: OverlayController","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/showscompass","title":"var showsCompass: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/showszoombuttons","title":"var showsZoomButtons: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/style","title":"var style: MapStyle?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapview\/userpointer","title":"let userPointer: UserPointerController","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapview\/cleanup()","title":"func cleanUp()","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapview\/deselectmapfeature()","title":"func deselectMapFeature()","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapview\/ontapcurrentlocationbutton()","title":"func onTapCurrentLocationButton()","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapview\/selectmapfeature(refid:)","title":"func selectMapFeature(refId: String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapview\/setmode(_:)","title":"func setMode(MapMode)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapview\/setpresentwithtransactionifnotsupports(gpufamily:)","title":"func setPresentWithTransactionIfNotSupports(gpuFamily: MTLGPUFamily)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapview\/setstyle(_:force:)","title":"func setStyle(MapStyle, force: Bool)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapview\/viewdidmovetosuperview()","title":"func viewDidMoveToSuperview()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapview\/toopaque()","title":"func toOpaque() -> OpaquePointer","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapview\/fromopaque(_:)","title":"static func fromOpaque(OpaquePointer) -> Self","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapview\/opaquepointerconvertable-implementations","title":"OpaquePointerConvertable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapview","title":"MapView","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/overlaycontroller\/scene","title":"var scene: MapScene!","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/overlaycontroller\/addmarker(_:)","title":"func addMarker(Marker)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/overlaycontroller\/removeallmarkers()","title":"func removeAllMarkers()","type":"method"},{"path":"\/documentation\/mapsnativesdk\/overlaycontroller\/removemarker(id:)","title":"func removeMarker(id: UInt32)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/overlaycontroller","title":"OverlayController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/userpointercontroller\/accuracy","title":"var accuracy: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/userpointercontroller\/bearing","title":"var bearing: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/userpointercontroller\/coordinates","title":"var coordinates: Coordinates?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/userpointercontroller\/isvisible","title":"var isVisible: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/userpointercontroller\/setcurrentlocation(bearing:animationduration:)","title":"func setCurrentLocation(bearing: Double?, animationDuration: Double?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/userpointercontroller\/setcurrentlocation(coordinates:accuracy:animationduration:)","title":"func setCurrentLocation(coordinates: Coordinates?, accuracy: Double?, animationDuration: Double?)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/userpointercontroller\/setcurrentlocation(coordinates:bearing:accuracy:animationduration:)","title":"func setCurrentLocation(coordinates: Coordinates?, bearing: Double?, accuracy: Double?, animationDuration: Double?)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/userpointercontroller","title":"UserPointerController","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/json\/stringrepresentation-2v8qg","title":"var stringRepresentation: String","type":"property"}],"title":"JSON Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/json\/stringrepresentation-185xi","title":"var stringRepresentation: String","type":"property"}],"path":"\/documentation\/mapsnativesdk\/json","title":"JSON","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/mapviewdelegate\/mapview(_:didchangemodeto:)-605ey","title":"func mapView(MapView, didChangeModeTo: MapMode)","type":"method"}],"title":"MapViewDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/mapviewdelegate\/mapview(_:didchangemodeto:)-9pmhq","title":"func mapView(MapView, didChangeModeTo: MapMode)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/mapviewdelegate\/mapview(_:didfailwitherror:)-3dkqj","title":"func mapView(MapView, didFailWithError: any Error)","type":"method"}],"title":"MapViewDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/mapviewdelegate\/mapview(_:didfailwitherror:)-5w21s","title":"func mapView(MapView, didFailWithError: any Error)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/mapviewdelegate\/mapview(_:didreceiveevent:)-7k969","title":"func mapView(MapView, didReceiveEvent: MapEvent)","type":"method"}],"title":"MapViewDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/mapviewdelegate\/mapview(_:didreceiveevent:)-6p40v","title":"func mapView(MapView, didReceiveEvent: MapEvent)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/mapsnativesdk\/mapviewdelegate\/mapview(_:willchangemodeto:)-kz0b","title":"func mapView(MapView, willChangeModeTo: MapMode) -> MapMode","type":"method"}],"title":"MapViewDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/mapsnativesdk\/mapviewdelegate\/mapview(_:willchangemodeto:)-2s1gd","title":"func mapView(MapView, willChangeModeTo: MapMode) -> MapMode","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapviewdelegate","title":"MapViewDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/paintproperties\/type","title":"var type: RenderingType","type":"property"}],"path":"\/documentation\/mapsnativesdk\/paintproperties","title":"PaintProperties","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/coordinates\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapsnativesdk\/coordinates\/init(lng:lat:)","title":"init(lng: Double, lat: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/coordinates\/lat","title":"let lat: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/coordinates\/lng","title":"let lng: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/coordinates\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/coordinates\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/coordinates","title":"Coordinates","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/fillpaintproperties\/init(fillcolor:fillopacity:)","title":"init(fillColor: PaintColor, fillOpacity: PaintOpacity)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/fillpaintproperties\/fillcolor","title":"let fillColor: PaintColor","type":"property"},{"path":"\/documentation\/mapsnativesdk\/fillpaintproperties\/fillopacity","title":"let fillOpacity: PaintOpacity","type":"property"},{"path":"\/documentation\/mapsnativesdk\/fillpaintproperties\/type","title":"let type: RenderingType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/fillpaintproperties\/stringrepresentation","title":"var stringRepresentation: String","type":"property"}],"path":"\/documentation\/mapsnativesdk\/fillpaintproperties\/paintproperties-implementations","title":"PaintProperties Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/fillpaintproperties","title":"FillPaintProperties","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/init(linecap:linejoin:linemiterlimit:lineroundlimit:linesortkey:visibility:)","title":"init(lineCap: LayoutProperties.LineCap, lineJoin: LayoutProperties.LineJoin, lineMiterLimit: Double?, lineRoundLimit: Double?, lineSortKey: Double?, visibility: LayoutProperties.Visibility)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.property","title":"let lineCap: LayoutProperties.LineCap","type":"property"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.property","title":"let lineJoin: LayoutProperties.LineJoin","type":"property"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linemiterlimit","title":"let lineMiterLimit: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/lineroundlimit","title":"let lineRoundLimit: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linesortkey","title":"let lineSortKey: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.property","title":"let visibility: LayoutProperties.Visibility","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/default","title":"static let `default`: LayoutProperties","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/butt","title":"case butt","type":"case"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/round","title":"case round","type":"case"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/square","title":"case square","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linecap-swift.enum","title":"LayoutProperties.LineCap","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/bevel","title":"case bevel","type":"case"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/miter","title":"case miter","type":"case"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/round","title":"case round","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/linejoin-swift.enum","title":"LayoutProperties.LineJoin","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/visible","title":"case visible","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties\/visibility-swift.enum","title":"LayoutProperties.Visibility","type":"enum"}],"path":"\/documentation\/mapsnativesdk\/layoutproperties","title":"LayoutProperties","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/linedashes\/init(dash:gap:)","title":"init(dash: Double, gap: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/linedashes\/dash","title":"let dash: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/linedashes\/gap","title":"let gap: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/linedashes\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapsnativesdk\/linedashes","title":"LineDashes","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/linepaintproperties\/init(linecolor:linewidth:lineopacity:dashes:)","title":"init(lineColor: PaintColor, lineWidth: Double, lineOpacity: PaintOpacity, dashes: LineDashes?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/linepaintproperties\/dashes","title":"let dashes: LineDashes?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/linepaintproperties\/linecolor","title":"let lineColor: PaintColor","type":"property"},{"path":"\/documentation\/mapsnativesdk\/linepaintproperties\/lineopacity","title":"let lineOpacity: PaintOpacity","type":"property"},{"path":"\/documentation\/mapsnativesdk\/linepaintproperties\/linewidth","title":"let lineWidth: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/linepaintproperties\/type","title":"let type: RenderingType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/linepaintproperties\/stringrepresentation","title":"var stringRepresentation: String","type":"property"}],"path":"\/documentation\/mapsnativesdk\/linepaintproperties\/paintproperties-implementations","title":"PaintProperties Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/linepaintproperties","title":"LinePaintProperties","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/map\/init(view:)","title":"init(view: MapView)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/map\/makensview(context:)","title":"func makeNSView(context: Map.Context) -> MapView","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/updatensview(_:context:)","title":"func updateNSView(MapView, context: Map.Context)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/map\/dismantlensview(_:coordinator:)-1l59f","title":"static func dismantleNSView(MapView, coordinator: ())","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/map\/body","title":"var body: Never","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/map\/makecoordinator()","title":"func makeCoordinator() -> Self.Coordinator","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/sizethatfits(_:nsview:context:)","title":"func sizeThatFits(ProposedViewSize, nsView: Self.NSViewType, context: Self.Context) -> CGSize?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/map\/dismantlensview(_:coordinator:)-3cdkw","title":"static func dismantleNSView(Self.NSViewType, coordinator: Self.Coordinator)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/map\/nsviewrepresentable-implementations","title":"NSViewRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/accessibility(activationpoint:)-29efi","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/accessibility(activationpoint:)-3mkc8","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityaction(named:_:)-2ds2q","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityaction(named:_:)-8r13g","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityaction(named:_:)-qvgc","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityactivationpoint(_:)-61jmd","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityactivationpoint(_:)-ol6v","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitycustomcontent(_:_:importance:)-1urc2","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitycustomcontent(_:_:importance:)-1yasj","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitycustomcontent(_:_:importance:)-4u1kk","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitycustomcontent(_:_:importance:)-6f5x5","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitycustomcontent(_:_:importance:)-6rd2n","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitycustomcontent(_:_:importance:)-6zb1o","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitycustomcontent(_:_:importance:)-8qgq5","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitycustomcontent(_:_:importance:)-8xde4","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityhint(_:)-5zw62","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityhint(_:)-630b8","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityhint(_:)-9k28c","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityinputlabels(_:)-195mq","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityinputlabels(_:)-1tq11","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityinputlabels(_:)-6ban7","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitylabel(_:)-3ty4w","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitylabel(_:)-8zamx","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitylabel(_:)-99i1q","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrotor(_:entries:)-44bjf","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrotor(_:entries:)-4l35m","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrotor(_:entries:)-4sehn","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrotor(_:entries:)-7vgr6","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrotor(_:entries:entryid:entrylabel:)-1vsx9","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrotor(_:entries:entryid:entrylabel:)-2506m","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrotor(_:entries:entryid:entrylabel:)-4ide7","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrotor(_:entries:entryid:entrylabel:)-88sq5","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrotor(_:entries:entrylabel:)-2oetf","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrotor(_:entries:entrylabel:)-2ok6d","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrotor(_:entries:entrylabel:)-5jncs","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrotor(_:entries:entrylabel:)-62o27","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrotor(_:textranges:)-17lg5","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrotor(_:textranges:)-1tjt0","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrotor(_:textranges:)-4w7ik","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrotor(_:textranges:)-6uv9i","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityvalue(_:)-19ub2","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityvalue(_:)-6oxfq","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityvalue(_:)-6y0rc","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alert(_:ispresented:actions:)-4wfoc","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alert(_:ispresented:actions:)-6hdzc","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alert(_:ispresented:actions:)-8rrxt","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alert(_:ispresented:actions:message:)-1pfdo","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alert(_:ispresented:actions:message:)-8xl2g","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alert(_:ispresented:actions:message:)-9ewtc","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alert(_:ispresented:presenting:actions:)-4wsks","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alert(_:ispresented:presenting:actions:)-5csq7","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alert(_:ispresented:presenting:actions:)-8jsgt","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alert(_:ispresented:presenting:actions:message:)-10q69","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alert(_:ispresented:presenting:actions:message:)-1r700","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alert(_:ispresented:presenting:actions:message:)-2e8sv","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alignmentguide(_:computevalue:)-4cahm","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alignmentguide(_:computevalue:)-4pz4j","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/alternatingrowbackgrounds(_:)","title":"func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/aspectratio(_:contentmode:)-2qorx","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/aspectratio(_:contentmode:)-5haal","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/background(_:in:fillstyle:)-2icez","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/background(_:in:fillstyle:)-sard","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/background(in:fillstyle:)-5sv6m","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/background(in:fillstyle:)-91j6e","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/badge(_:)-1qzvx","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/badge(_:)-37xd0","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/badge(_:)-5c42k","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/badge(_:)-8w68k","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/buttonstyle(_:)-3pcht","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/buttonstyle(_:)-t14s","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2b1q","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/confirmationdialog(_:ispresented:titlevisibility:actions:)-426i5","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8rdwh","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1buym","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4elzl","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9uvdz","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1uxiv","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-23x3x","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9ivbs","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-84r6e","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9d3l3","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9y86s","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/contentmargins(_:_:for:)-6krbd","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/contentmargins(_:_:for:)-7gf9x","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/copyable(_:)","title":"func copyable<T>(() -> [T]) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/cuttable(for:action:)","title":"func cuttable<T>(for: T.Type, action: () -> [T]) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/dialogseverity(_:)","title":"func dialogSeverity(DialogSeverity) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/dialogsuppressiontoggle(_:issuppressed:)-4p60o","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/dialogsuppressiontoggle(_:issuppressed:)-5cp7j","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/dialogsuppressiontoggle(_:issuppressed:)-8jjyy","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/exportabletoservices(_:)","title":"func exportableToServices<T>(() -> [T]) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/exportabletoservices(_:onedit:)","title":"func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/exportsitemproviders(_:onexport:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/exportsitemproviders(_:onexport:onedit:)","title":"func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/filedialogconfirmationlabel(_:)-4x01","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/filedialogconfirmationlabel(_:)-53iyr","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/filedialogconfirmationlabel(_:)-98afj","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/filedialogmessage(_:)-59g0w","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/filedialogmessage(_:)-5s4tt","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/filedialogmessage(_:)-7ru7x","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1uxh9","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-55tz8","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-31t54","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-kg8h","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fileexporter(ispresented:documents:contenttype:oncompletion:)-44mkt","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fileexporter(ispresented:documents:contenttype:oncompletion:)-scfw","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3edm8","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5m9ul","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fileexporterfilenamelabel(_:)-2p0lf","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fileexporterfilenamelabel(_:)-5k8","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fileexporterfilenamelabel(_:)-6n0qq","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/focusscope(_:)","title":"func focusScope(Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/focussection()","title":"func focusSection() -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/focusable(_:onfocuschange:)","title":"func focusable(Bool, onFocusChange: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/focusedobject(_:)-122","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/focusedobject(_:)-6c0d","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/focusedsceneobject(_:)-5t7n1","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/focusedsceneobject(_:)-5v3uj","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/focusedscenevalue(_:_:)-56ig4","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/focusedscenevalue(_:_:)-8j79s","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/focusedvalue(_:_:)-4rqfm","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/focusedvalue(_:_:)-9z92m","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/help(_:)-1wby1","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/help(_:)-2rxju","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/help(_:)-8u3mm","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/horizontalradiogrouplayout()","title":"func horizontalRadioGroupLayout() -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/importablefromservices(for:action:)","title":"func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/importsitemproviders(_:onimport:)","title":"func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/keyboardshortcut(_:)-5h896","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/keyboardshortcut(_:)-7dbaa","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/linelimit(_:)-48cov","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/linelimit(_:)-7vodd","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/linelimit(_:)-9pjkv","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/linelimit(_:)-o88e","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/listitemtint(_:)-6c9x3","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/listitemtint(_:)-zwv2","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/menubuttonstyle(_:)","title":"func menuButtonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/navigationbartitle(_:)-23xme","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/navigationbartitle(_:)-27mea","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/navigationbartitle(_:)-7p4pj","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/navigationbartitle(_:displaymode:)-1074e","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/navigationbartitle(_:displaymode:)-2qkhz","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/navigationbartitle(_:displaymode:)-9bax9","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationdocument(_:preview:)-272ml","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationdocument(_:preview:)-5etyw","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationdocument(_:preview:)-76cy3","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationdocument(_:preview:)-caps","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationsubtitle(_:)-12cbw","title":"func navigationSubtitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationsubtitle(_:)-1wrt1","title":"func navigationSubtitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationsubtitle(_:)-3zjgu","title":"func navigationSubtitle(Text) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationtitle(_:)-2nrkw","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationtitle(_:)-3wsfp","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationtitle(_:)-8wktd","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationtitle(_:)-9f60n","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/navigationtitle(_:)-haag","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onchange(of:initial:_:)-45c38","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onchange(of:initial:_:)-5h3z0","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/oncommand(_:perform:)","title":"func onCommand(Selector, perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/oncopycommand(perform:)","title":"func onCopyCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/oncutcommand(perform:)","title":"func onCutCommand(perform: (() -> [NSItemProvider])?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/ondeletecommand(perform:)","title":"func onDeleteCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/ondrop(of:delegate:)-342yg","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/ondrop(of:delegate:)-68i7x","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/ondrop(of:istargeted:perform:)-31gb8","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/ondrop(of:istargeted:perform:)-40myk","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/ondrop(of:istargeted:perform:)-52jqv","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/ondrop(of:istargeted:perform:)-61yh3","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onexitcommand(perform:)","title":"func onExitCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onmovecommand(perform:)","title":"func onMoveCommand(perform: ((MoveCommandDirection) -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onpastecommand(of:perform:)-62ksb","title":"func onPasteCommand(of: [UTType], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/onpastecommand(of:perform:)-90aod","title":"func onPasteCommand(of: [String], perform: ([NSItemProvider]) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onpastecommand(of:validator:perform:)-4i2m9","title":"func onPasteCommand<Payload>(of: [UTType], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/onpastecommand(of:validator:perform:)-6rb8w","title":"func onPasteCommand<Payload>(of: [String], validator: ([NSItemProvider]) -> Payload?, perform: (Payload) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onplaypausecommand(perform:)","title":"func onPlayPauseCommand(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/padding(_:)-2vpv5","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/padding(_:)-65hws","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/pagecommand(value:in:step:)","title":"func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/pastedestination(for:action:validator:)","title":"func pasteDestination<T>(for: T.Type, action: ([T]) -> Void, validator: ([T]) -> [T]) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/prefersdefaultfocus(_:in:)","title":"func prefersDefaultFocus(Bool, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/presentedwindowstyle(_:)","title":"func presentedWindowStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/presentedwindowtoolbarstyle(_:)","title":"func presentedWindowToolbarStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/renameaction(_:)-9ofne","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/renameaction(_:)-tbct","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/safeareainset(edge:alignment:spacing:content:)-6v326","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/safeareainset(edge:alignment:spacing:content:)-jbvt","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/safeareapadding(_:)-4ghda","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/safeareapadding(_:)-79i5p","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scaleeffect(_:anchor:)-21eua","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scaleeffect(_:anchor:)-2vcup","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3atkw","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4d9e3","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5069y","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:editabletokens:placement:prompt:token:)-54e6","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:editabletokens:placement:prompt:token:)-67mmm","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:editabletokens:placement:prompt:token:)-7s4rv","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:ispresented:placement:prompt:)-1af68","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:ispresented:placement:prompt:)-4m1k","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:ispresented:placement:prompt:)-6lfr0","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:placement:prompt:)-5yt26","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:placement:prompt:)-5yuj8","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:placement:prompt:)-9f3ir","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:placement:prompt:suggestions:)-2njjl","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:placement:prompt:suggestions:)-64mzn","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:placement:prompt:suggestions:)-vqvu","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:tokens:ispresented:placement:prompt:token:)-1r6mi","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:tokens:ispresented:placement:prompt:token:)-635q5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:tokens:ispresented:placement:prompt:token:)-8dmnq","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:tokens:placement:prompt:token:)-11s3y","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:tokens:placement:prompt:token:)-5yl7l","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:tokens:placement:prompt:token:)-70e7f","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-20qbm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6dlaf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8fuz7","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6qcfc","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7zwes","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9yoim","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/textcontenttype(_:)","title":"func textContentType(NSTextContentType?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/toolbar(content:)-4mp3m","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/toolbar(content:)-54020","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/touchbar(_:)","title":"func touchBar<Content>(TouchBar<Content>) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/touchbar(content:)","title":"func touchBar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/touchbarcustomizationlabel(_:)","title":"func touchBarCustomizationLabel(Text) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/touchbaritempresence(_:)","title":"func touchBarItemPresence(TouchBarItemPresence) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/touchbaritemprincipal(_:)","title":"func touchBarItemPrincipal(Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/typeselectequivalent(_:)-5za96","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/typeselectequivalent(_:)-75v8","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/typeselectequivalent(_:)-7em7v","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/typesettinglanguage(_:isenabled:)-5yf3t","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/typesettinglanguage(_:isenabled:)-71za1","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/mapsnativesdk\/map\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/mapsnativesdk\/map\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/map","title":"Map","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/init(easing:duration:)","title":"init(easing: MapAnimationEasing, duration: MapAnimationOptions.Duration?)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/duration-swift.property","title":"var duration: MapAnimationOptions.Duration?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/easing","title":"var easing: MapAnimationEasing","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/duration-swift.enum\/linear(value:)","title":"case linear(value: TimeInterval)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/duration-swift.enum\/max(value:)","title":"case max(value: TimeInterval)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/duration-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/duration-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapanimationoptions\/duration-swift.enum","title":"MapAnimationOptions.Duration","type":"enum"}],"path":"\/documentation\/mapsnativesdk\/mapanimationoptions","title":"MapAnimationOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapbounds\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapbounds\/init(southwest:northeast:)","title":"init(southwest: Coordinates, northeast: Coordinates)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapbounds\/northeast","title":"let northeast: Coordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapbounds\/southwest","title":"let southwest: Coordinates","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapbounds\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapbounds\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapbounds","title":"MapBounds","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapcameraoptions\/init(bearing:zoom:pitch:padding:)","title":"init(bearing: Double?, zoom: Double?, pitch: Double?, padding: MapEdgeInsets?)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapcameraoptions\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapcameraoptions\/bearing","title":"var bearing: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapcameraoptions\/padding","title":"var padding: MapEdgeInsets?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapcameraoptions\/pitch","title":"var pitch: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapcameraoptions\/zoom","title":"var zoom: Double?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapcameraoptions","title":"MapCameraOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/init(center:zoom:customstyle:selectfeatures:locale:markersoverlap:cameramode:)","title":"init(center: Coordinates, zoom: Double, customStyle: String, selectFeatures: FeaturesSelectionMode, locale: String, markersOverlap: MarkersOverlapMode, cameraMode: MapConfiguration.CameraMode)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/init(center:zoom:predefinedstyle:selectfeatures:locale:markersoverlap:cameramode:)","title":"init(center: Coordinates, zoom: Double, predefinedStyle: MapPredefinedStyle, selectFeatures: FeaturesSelectionMode, locale: String, markersOverlap: MarkersOverlapMode, cameraMode: MapConfiguration.CameraMode)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/init(center:zoom:remotestyleurl:selectfeatures:locale:markersoverlap:cameramode:)","title":"init(center: Coordinates, zoom: Double, remoteStyleURL: URL, selectFeatures: FeaturesSelectionMode, locale: String, markersOverlap: MarkersOverlapMode, cameraMode: MapConfiguration.CameraMode)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/init(center:zoom:style:selectfeatures:locale:markersoverlap:cameramode:)","title":"init(center: Coordinates, zoom: Double, style: MapStyle, selectFeatures: FeaturesSelectionMode, locale: String, markersOverlap: MarkersOverlapMode, cameraMode: MapConfiguration.CameraMode)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/cameramode-swift.property","title":"let cameraMode: MapConfiguration.CameraMode","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/center","title":"let center: Coordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/locale","title":"let locale: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/markersoverlap","title":"let markersOverlap: MarkersOverlapMode","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/selectfeatures","title":"let selectFeatures: FeaturesSelectionMode","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/style-swift.property","title":"let style: MapConfiguration.Style","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/zoom","title":"let zoom: Double","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/cameramode-swift.enum\/earth","title":"case earth","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/cameramode-swift.enum\/perspective","title":"case perspective","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/cameramode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/cameramode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/cameramode-swift.enum","title":"MapConfiguration.CameraMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/style-swift.enum\/instance(_:)","title":"case instance(MapStyle)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/style-swift.enum\/json(_:)","title":"case json(String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/style-swift.enum\/predefined(_:)","title":"case predefined(MapPredefinedStyle)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/style-swift.enum\/url(_:)","title":"case url(URL)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/style-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/style-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapconfiguration\/style-swift.enum","title":"MapConfiguration.Style","type":"enum"}],"path":"\/documentation\/mapsnativesdk\/mapconfiguration","title":"MapConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodepoint\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapnodepoint\/init(x:y:)-2ycqo","title":"init(x: Double, y: Double)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapnodepoint\/init(x:y:)-7ctlk","title":"init(x: Double, y: Double?)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapnodepoint\/init(x:y:)-7hgd8","title":"init(x: Double?, y: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodepoint\/x","title":"let x: Double?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapnodepoint\/y","title":"let y: Double?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodepoint\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodepoint\/value(x:y:)-54547","title":"static func value(x: Double?, y: Double) -> MapNodePoint","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapnodepoint\/value(x:y:)-6ucfr","title":"static func value(x: Double, y: Double) -> MapNodePoint","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapnodepoint\/value(x:y:)-9q76r","title":"static func value(x: Double, y: Double?) -> MapNodePoint","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapnodepoint","title":"MapNodePoint","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/==(_:_:)","title":"static func == (MapStyle, MapStyle) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/init()","title":"init()","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/init(from:)","title":"init?(from: MapView)","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/init(json:)","title":"init(json: String) async throws","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/init(predefinedstyle:)","title":"init(predefinedStyle: MapPredefinedStyle) async throws","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/init(url:)","title":"init(url: URL) async throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/currentlocationcolors","title":"var currentLocationColors: CurrentLocationColors?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/currentlocationimage","title":"var currentLocationImage: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/currentlocationmodel","title":"var currentLocationModel: CurrentLocationMesh?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/layers","title":"var layers: [MapLayer]","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/sources","title":"var sources: [MapDataSource]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addimage(iconid:image:scale:)","title":"func addImage(iconID: String, image: CGImage, scale: CGFloat) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addimage(iconid:pngimagedata:scale:)","title":"func addImage(iconID: String, pngImageData: Data, scale: CGFloat) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addimage(iconid:svgdata:scale:size:)","title":"func addImage(iconID: String, svgData: String, scale: CGFloat, size: CGSize) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addlayer(_:)","title":"func addLayer(MapLayer) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addmodel(modelid:data:)","title":"func addModel(modelID: String, data: Data)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addsource(_:)","title":"func addSource(MapDataSource) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/addsources(_:andlayers:)","title":"func addSources([MapDataSource], andLayers: [MapLayer]) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/insertlayer(_:at:)","title":"func insertLayer(MapLayer, at: Int) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/insertlayer(_:before:)","title":"func insertLayer(MapLayer, before: String) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/layer(at:)","title":"func layer(at: Int) -> MapLayer?","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/layer(by:)","title":"func layer(by: String) -> MapLayer?","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removecurrentlocationimage()","title":"func removeCurrentLocationImage()","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removecurrentlocationmodel()","title":"func removeCurrentLocationModel()","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removeimage(iconid:)","title":"func removeImage(iconID: String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removelayer(_:)","title":"func removeLayer(MapLayer)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removelayer(by:)","title":"func removeLayer(by: String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removemodel(modelid:)","title":"func removeModel(modelID: String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removesource(_:)","title":"func removeSource(MapDataSource)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removesource(by:)","title":"func removeSource(by: String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/removesprite(key:)","title":"func removeSprite(key: String) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/setcurrentlocationcolors(accuracycolor:pointcolormain:pointcolorsub:bearingcolormain:bearingcolorsub:)","title":"func setCurrentLocationColors(accuracyColor: CGColor, pointColorMain: CGColor, pointColorSub: CGColor, bearingColorMain: CGColor, bearingColorSub: CGColor)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/setcurrentlocationimage(iconid:)","title":"func setCurrentLocationImage(iconID: String)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/setcurrentlocationmodel(modelid:scale:rotation:height:tilescalelevel:yup:)","title":"func setCurrentLocationModel(modelID: String, scale: CGFloat, rotation: Angle, height: CGFloat, tileScaleLevel: UInt8, yUp: Bool)","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/setsprite(data:metadata:key:)","title":"func setSprite(data: Data, metaData: String, key: String) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/setsprite(url:key:)","title":"func setSprite(url: URL, key: String) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/source(at:)","title":"func source(at: Int) -> MapDataSource?","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/source(by:)","title":"func source(by: String) -> MapDataSource?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapstyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapstyle","title":"MapStyle","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/marker\/init(id:coordinates:iconid:alignment:zindex:)","title":"init(id: UInt32, coordinates: Coordinates, iconID: String, alignment: MarkerImageAlignment, zIndex: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/marker\/alignment","title":"let alignment: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/marker\/coordinates","title":"let coordinates: Coordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/marker\/iconid","title":"let iconID: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/marker\/id","title":"let id: UInt32","type":"property"},{"path":"\/documentation\/mapsnativesdk\/marker\/zindex","title":"let zIndex: Int32","type":"property"}],"path":"\/documentation\/mapsnativesdk\/marker","title":"Marker","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/init(anchor:offset:)","title":"init(anchor: MarkerImageAlignment.Anchor, offset: CGPoint)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.property","title":"let anchor: MarkerImageAlignment.Anchor","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/offset","title":"var offset: CGPoint","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> MarkerImageAlignment","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/bottom","title":"static let bottom: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/bottomleft","title":"static let bottomLeft: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/bottomright","title":"static let bottomRight: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/center","title":"static let center: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/left","title":"static let left: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/right","title":"static let right: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/top","title":"static let top: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/topleft","title":"static let topLeft: MarkerImageAlignment","type":"property"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/topright","title":"static let topRight: MarkerImageAlignment","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/bottom","title":"case bottom","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/bottomleft","title":"case bottomLeft","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/bottomright","title":"case bottomRight","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/center","title":"case center","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/left","title":"case left","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/right","title":"case right","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/top","title":"case top","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/topleft","title":"case topLeft","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/topright","title":"case topRight","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/markerimagealignment\/anchor-swift.enum","title":"MarkerImageAlignment.Anchor","type":"enum"}],"path":"\/documentation\/mapsnativesdk\/markerimagealignment","title":"MarkerImageAlignment","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapedgeinsets","title":"MapEdgeInsets","type":"typealias"},{"path":"\/documentation\/mapsnativesdk\/platformcolor","title":"PlatformColor","type":"typealias"},{"path":"\/documentation\/mapsnativesdk\/platformimage","title":"PlatformImage","type":"typealias"},{"path":"\/documentation\/mapsnativesdk\/platformview","title":"PlatformView","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/featuresselectionmode\/all","title":"case all","type":"case"},{"path":"\/documentation\/mapsnativesdk\/featuresselectionmode\/drawselection","title":"case drawSelection","type":"case"},{"path":"\/documentation\/mapsnativesdk\/featuresselectionmode\/handleevents","title":"case handleEvents","type":"case"},{"path":"\/documentation\/mapsnativesdk\/featuresselectionmode\/none","title":"case none","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/featuresselectionmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/featuresselectionmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/featuresselectionmode","title":"FeaturesSelectionMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapanimationeasing\/easein","title":"case easeIn","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapanimationeasing\/easeinout","title":"case easeInOut","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapanimationeasing\/easeout","title":"case easeOut","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapanimationeasing\/flyto(curve:)","title":"case flyTo(curve: Double?)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapanimationeasing\/linear","title":"case linear","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapanimationeasing\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapanimationeasing\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapanimationeasing","title":"MapAnimationEasing","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapcameraanimationresult\/cancelled","title":"case cancelled","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapcameraanimationresult\/ended","title":"case ended","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapcameraanimationresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapcameraanimationresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapcameraanimationresult","title":"MapCameraAnimationResult","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapcameracoordinates\/anchor(_:)","title":"case anchor(Coordinates)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapcameracoordinates\/center(_:)","title":"case center(Coordinates)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapcameracoordinates\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapcameracoordinates\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapcameracoordinates","title":"MapCameraCoordinates","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maperror\/cancelled(message:)","title":"case cancelled(message: String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maperror\/currentpositionnotset","title":"case currentPositionNotSet","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maperror\/invalidargument(message:)","title":"case invalidArgument(message: String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maperror\/invalidlayer(message:)","title":"case invalidLayer(message: String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maperror\/invalidsource(message:)","title":"case invalidSource(message: String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maperror\/invalidstate(message:)","title":"case invalidState(message: String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maperror\/invalidstyle(message:)","title":"case invalidStyle(message: String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maperror\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maperror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maperror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapsnativesdk\/maperror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maperror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maperror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mapsnativesdk\/maperror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/maperror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/maperror","title":"MapError","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameraposition\/bearing","title":"let bearing: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameraposition\/bounds","title":"let bounds: MapBounds","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameraposition\/center","title":"let center: Coordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameraposition\/pitch","title":"let pitch: Double","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameraposition\/zoom","title":"let zoom: Double","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/cameraposition","title":"MapEvent.CameraPosition","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/eventcoordinates\/geocoordinates","title":"let geoCoordinates: Coordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/eventcoordinates\/uicoordinates","title":"let uiCoordinates: CGPoint","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/eventcoordinates","title":"MapEvent.EventCoordinates","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/geojsonfeaturedetails\/coordinates","title":"let coordinates: MapEvent.EventCoordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/geojsonfeaturedetails\/featureid","title":"let featureId: UInt64","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/geojsonfeaturedetails\/geojsonsourceid","title":"let geoJsonSourceId: String","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/geojsonfeaturedetails\/islongtap","title":"let isLongTap: Bool","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/geojsonfeaturedetails","title":"MapEvent.GeoJSONFeatureDetails","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/mapfeaturedetails\/coordinates","title":"let coordinates: MapEvent.EventCoordinates","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/mapfeaturedetails\/islongtap","title":"let isLongTap: Bool","type":"property"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/mapfeaturedetails\/refid","title":"let refId: String","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/mapfeaturedetails","title":"MapEvent.MapFeatureDetails","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameradidmove(state:reason:phase:)","title":"case cameraDidMove(state: MapEvent.CameraPosition, reason: MapEvent.CameraMovingReason, phase: MapEvent.CameraMovingPhase)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/geojsonfeaturedidselect(details:)","title":"case geoJsonFeatureDidSelect(details: MapEvent.GeoJSONFeatureDetails)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/longtap(coordinates:)","title":"case longTap(coordinates: MapEvent.EventCoordinates)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/mapdidshow","title":"case mapDidShow","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/mapfeaturedidselect(details:)","title":"case mapFeatureDidSelect(details: MapEvent.MapFeatureDetails)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/markerdidselect(id:coordinates:)","title":"case markerDidSelect(id: UInt32, coordinates: MapEvent.EventCoordinates)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/platformmarkerdidselect(id:)","title":"case platformMarkerDidSelect(id: String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/scenepindidselect(pin:uicoordinates:islongtap:)","title":"case scenePinDidSelect(pin: MapPin, uiCoordinates: CGPoint, isLongtap: Bool)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/styledidset","title":"case styleDidSet","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/styledidupdate","title":"case styleDidUpdate","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/tap(coordinates:)","title":"case tap(coordinates: MapEvent.EventCoordinates)","type":"case"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/began","title":"case began","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/cancelled","title":"case cancelled","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/changed","title":"case changed","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/ended","title":"case ended","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/finished","title":"case finished","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingphase","title":"MapEvent.CameraMovingPhase","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingreason\/code","title":"case code","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingreason\/control(element:)","title":"case control(element: MapEvent.Control)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingreason\/custom(reason:)","title":"case custom(reason: Any)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingreason\/followmode","title":"case followMode","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingreason\/gesture","title":"case gesture","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingreason\/inertia","title":"case inertia","type":"case"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/cameramovingreason","title":"MapEvent.CameraMovingReason","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/control\/compass","title":"case compass","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/control\/currentlocation","title":"case currentLocation","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/control\/zoomarea","title":"case zoomArea","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/control\/zoombuttons","title":"case zoomButtons","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapevent\/control\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/control\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapevent\/control","title":"MapEvent.Control","type":"enum"}],"path":"\/documentation\/mapsnativesdk\/mapevent","title":"MapEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapfeatureid\/geojson(sourceid:featureid:)","title":"case geojson(sourceId: String, featureId: UInt64)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapfeatureid\/map(refid:)","title":"case map(refId: String)","type":"case"}],"path":"\/documentation\/mapsnativesdk\/mapfeatureid","title":"MapFeatureId","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maplogoalignment\/bottomleft","title":"case bottomLeft","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maplogoalignment\/bottomright","title":"case bottomRight","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maplogoalignment\/topleft","title":"case topLeft","type":"case"},{"path":"\/documentation\/mapsnativesdk\/maplogoalignment\/topright","title":"case topRight","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/maplogoalignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/maplogoalignment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/maplogoalignment","title":"MapLogoAlignment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapmode\/followbearingandlocation","title":"case followBearingAndLocation","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapmode\/followlocation","title":"case followLocation","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapmode\/free","title":"case free","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapmode","title":"MapMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/parallel(_:)","title":"case parallel([MapNodeAction])","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/repeat(_:count:autoreverse:)","title":"case `repeat`(MapNodeAction, count: MapNodeActionCountMode, autoReverse: Bool)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/rotate(from:to:duration:easing:)","title":"case rotate(from: Angle?, to: Angle, duration: TimeInterval, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/rotaterelative(angle:duration:easing:)","title":"case rotateRelative(angle: Angle, duration: TimeInterval, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/scale(from:to:duration:easing:)","title":"case scale(from: MapNodePoint?, to: MapNodePoint, duration: TimeInterval, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/scalerelative(xscale:yscale:duration:easing:)","title":"case scaleRelative(xScale: Double, yScale: Double, duration: TimeInterval, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/sequence(_:)","title":"case sequence([MapNodeAction])","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/translate(from:to:duration:easing:)","title":"case translate(from: MapNodePoint?, to: MapNodePoint, duration: TimeInterval, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/translaterelative(tx:ty:duration:easing:)","title":"case translateRelative(tx: Double, ty: Double, duration: TimeInterval, easing: MapNodeActionAnimationEasing)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/wait(duration:)","title":"case wait(duration: TimeInterval)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeaction\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapnodeaction","title":"MapNodeAction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/easein","title":"case easeIn","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/easeinout","title":"case easeInOut","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/easeout","title":"case easeOut","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/linear","title":"case linear","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/sinein","title":"case sineIn","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/sineinout","title":"case sineInOut","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/sineout","title":"case sineOut","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapnodeactionanimationeasing","title":"MapNodeActionAnimationEasing","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactioncountmode\/count(value:)","title":"case count(value: Int)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactioncountmode\/infinity","title":"case infinity","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapnodeactioncountmode\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/mapsnativesdk\/mapnodeactioncountmode","title":"MapNodeActionCountMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/dark","title":"case dark","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/graylight","title":"case grayLight","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/main","title":"case main","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/navigationdark","title":"case navigationDark","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/navigationmain","title":"case navigationMain","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/simple","title":"case simple","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/simpledark","title":"case simpleDark","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mappredefinedstyle","title":"MapPredefinedStyle","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror\/cancellationerror","title":"case cancellationError","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror\/layererror(_:)","title":"case layerError(String?)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror\/loadererror(_:)","title":"case loaderError(String?)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror\/sourceerror(_:)","title":"case sourceError(String?)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror\/styleerror(_:)","title":"case styleError(String?)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapsnativestyleerror","title":"MapsNativeStyleError","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapssdkconfigurator\/setup(baseurl:apikey:diskcachepath:maxcachesizebytes:cachefilettlsec:tilereloadintervals:styleloadtimeout:tileloadtimeout:sourceloadtimeout:geojsonloadtimeout:dataloadtimeout:)","title":"static func setup(baseURL: String, apiKey: String, diskCachePath: String, maxCacheSizeBytes: UInt64, cacheFileTTLSec: UInt64, tileReloadIntervals: [UInt64], styleLoadTimeout: UInt64, tileLoadTimeout: UInt64, sourceLoadTimeout: UInt64, geoJsonLoadTimeout: UInt64, dataLoadTimeout: UInt64) -> Bool","type":"method"}],"path":"\/documentation\/mapsnativesdk\/mapssdkconfigurator","title":"MapsSDKConfigurator","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/markersoverlapmode\/disabled","title":"case disabled","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markersoverlapmode\/enabled","title":"case enabled","type":"case"},{"path":"\/documentation\/mapsnativesdk\/markersoverlapmode\/withfeatures","title":"case withFeatures","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/markersoverlapmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/markersoverlapmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/markersoverlapmode","title":"MarkersOverlapMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/paintcolor\/hex(_:)","title":"case hex(String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/paintcolor\/source(propertiesfield:)","title":"case source(propertiesField: String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/paintcolor\/uicolor(_:)","title":"case uiColor(PlatformColor)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/paintcolor\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/paintcolor\/hexcolor","title":"static let hexcolor: PaintColor","type":"property"}],"path":"\/documentation\/mapsnativesdk\/paintcolor","title":"PaintColor","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/paintopacity\/source(propertiesfield:)","title":"case source(propertiesField: String)","type":"case"},{"path":"\/documentation\/mapsnativesdk\/paintopacity\/value(_:)","title":"case value(Double)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/paintopacity\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/paintopacity\/opacity","title":"static let opacity: PaintOpacity","type":"property"}],"path":"\/documentation\/mapsnativesdk\/paintopacity","title":"PaintOpacity","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/renderingtype\/fill","title":"case fill","type":"case"},{"path":"\/documentation\/mapsnativesdk\/renderingtype\/line","title":"case line","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/renderingtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/renderingtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mapsnativesdk\/renderingtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/renderingtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/renderingtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mapsnativesdk\/renderingtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/renderingtype","title":"RenderingType","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/corebridge\/corelatlonpoint\/init(_:)","title":"init?(CoreLatLonPoint?)","type":"init"}],"path":"\/documentation\/mapsnativesdk\/corebridge\/corelatlonpoint\/coptionalvalue-implementations","title":"COptionalValue Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/corebridge\/corelatlonpoint","title":"CoreLatLonPoint","type":"extension"}],"path":"\/documentation\/mapsnativesdk\/corebridge","title":"CoreBridge","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/foundation\/data\/stringrepresentation","title":"var stringRepresentation: String","type":"property"}],"path":"\/documentation\/mapsnativesdk\/foundation\/data\/json-implementations","title":"JSON Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/foundation\/data","title":"Data","type":"extension"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/foundation\/nsedgeinsets\/zero","title":"static let zero: NSEdgeInsets","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/foundation\/nsedgeinsets\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/mapsnativesdk\/foundation\/nsedgeinsets\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/foundation\/nsedgeinsets\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapsnativesdk\/foundation\/nsedgeinsets\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/foundation\/nsedgeinsets","title":"NSEdgeInsets","type":"extension"}],"path":"\/documentation\/mapsnativesdk\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionallatlon\/init(_:)","title":"init(Self.Value?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionallatlon\/swiftoptional","title":"var swiftOptional: Self.Value?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionallatlon\/coptional-implementations","title":"COptional Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionallatlon","title":"COptionalLatLon","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionallocationmesh\/init(_:)","title":"init(Self.Value?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionallocationmesh\/swiftoptional","title":"var swiftOptional: Self.Value?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionallocationmesh\/coptional-implementations","title":"COptional Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionallocationmesh","title":"COptionalLocationMesh","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapviewcameramotionstate\/init(_:)","title":"init(Self.Value?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapviewcameramotionstate\/swiftoptional","title":"var swiftOptional: Self.Value?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapviewcameramotionstate\/coptional-implementations","title":"COptional Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapviewcameramotionstate","title":"COptionalMapViewCameraMotionState","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapviewdoublevector\/init(_:)","title":"init(Self.Value?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapviewdoublevector\/swiftoptional","title":"var swiftOptional: Self.Value?","type":"property"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapviewdoublevector\/coptional-implementations","title":"COptional Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/coptionalmapviewdoublevector","title":"COptionalMapViewDoubleVector","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/currentlocationmesh\/init(_:)","title":"init?(CurrentLocationMesh?)","type":"init"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/currentlocationmesh\/coptionalvalue-implementations","title":"COptionalValue Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/currentlocationmesh","title":"CurrentLocationMesh","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/mapviewdoublevector\/init(_:)","title":"init?(MapViewDoubleVector?)","type":"init"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/mapviewdoublevector\/coptionalvalue-implementations","title":"COptionalValue Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/mapviewdoublevector","title":"MapViewDoubleVector","type":"extension"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/mapviewcameramotionstate\/init()","title":"init()","type":"init"},{"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/mapviewcameramotionstate\/init(_:)","title":"init?(MapViewCameraMotionState?)","type":"init"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/mapviewcameramotionstate\/coptionalvalue-implementations","title":"COptionalValue Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge\/mapviewcameramotionstate","title":"MapViewCameraMotionState","type":"extension"}],"path":"\/documentation\/mapsnativesdk\/mapsnativebridge","title":"MapsNativeBridge","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/swiftui\/angle\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/mapsnativesdk\/swiftui\/angle\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mapsnativesdk\/swiftui\/angle\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/mapsnativesdk\/swiftui\/angle\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/mapsnativesdk\/swiftui\/angle","title":"Angle","type":"extension"}],"path":"\/documentation\/mapsnativesdk\/swiftui","title":"SwiftUI","type":"extension"}],"path":"\/documentation\/mapsnativesdk","title":"MapsNativeSDK","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}